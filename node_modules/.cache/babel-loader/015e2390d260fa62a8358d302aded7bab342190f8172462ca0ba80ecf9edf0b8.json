{"ast":null,"code":"import { connect } from 'react-redux';\nimport App from '../components';\nimport { saveCart } from '../../lib/actions';\nexport const AppContainer = connect(function mapStateToProps(state) {\n  return {\n    items: state.items\n  };\n}, function mapDispatchToProps(dispatch) {\n  return {\n    saveLocalStorage: items => dispatch(saveCart(items))\n  };\n})(App);\n\n/* Voici l'explication du code ci-dessus :\n1. Tout d'abord, nous importons `connect` depuis `react-redux`.\n2. Ensuite, nous importons le composant que nous voulons connecter.\n3. Puis, nous importons les actions que nous souhaitons envoyer.\n4. Ensuite, nous créons le composant conteneur.\n5. Nous invoquons `connect` et lui passons `mapStateToProps` et `mapDispatchToProps`.\n   Ce sont des fonctions qui renvoient respectivement les parties de l'état et les actions que nous voulons transmettre à notre composant.\n6. Nous appelons de nouveau `connect`, mais cette fois en passant notre composant en argument. */","map":{"version":3,"names":["connect","App","saveCart","AppContainer","mapStateToProps","state","items","mapDispatchToProps","dispatch","saveLocalStorage"],"sources":["/Users/bordetisabelle/Documents/grocery-delivery-starter/starter-project/src/app/views/containers/index.js"],"sourcesContent":["import { connect } from 'react-redux'\nimport App from '../components';\nimport { saveCart } from '../../lib/actions'\n\nexport const AppContainer = connect(\n    function mapStateToProps(state) {\n        return { items: state.items }\n    },\n    function mapDispatchToProps(dispatch) {\n        return {\n            saveLocalStorage: items => dispatch(saveCart(items))\n        }\n    }\n)(App) \n\n\n/* Voici l'explication du code ci-dessus :\n1. Tout d'abord, nous importons `connect` depuis `react-redux`.\n2. Ensuite, nous importons le composant que nous voulons connecter.\n3. Puis, nous importons les actions que nous souhaitons envoyer.\n4. Ensuite, nous créons le composant conteneur.\n5. Nous invoquons `connect` et lui passons `mapStateToProps` et `mapDispatchToProps`.\n   Ce sont des fonctions qui renvoient respectivement les parties de l'état et les actions que nous voulons transmettre à notre composant.\n6. Nous appelons de nouveau `connect`, mais cette fois en passant notre composant en argument. */\n\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,OAAOC,GAAG,MAAM,eAAe;AAC/B,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,OAAO,MAAMC,YAAY,GAAGH,OAAO,CAC/B,SAASI,eAAeA,CAACC,KAAK,EAAE;EAC5B,OAAO;IAAEC,KAAK,EAAED,KAAK,CAACC;EAAM,CAAC;AACjC,CAAC,EACD,SAASC,kBAAkBA,CAACC,QAAQ,EAAE;EAClC,OAAO;IACHC,gBAAgB,EAAEH,KAAK,IAAIE,QAAQ,CAACN,QAAQ,CAACI,KAAK,CAAC;EACvD,CAAC;AACL,CACJ,CAAC,CAACL,GAAG,CAAC;;AAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}